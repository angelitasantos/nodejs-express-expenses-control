inicializar o projeto
npm init -y

instalar biblioteca
npm install express

criar o arquivo index.js e importar a biblioteca express
acrescentar no arquivo package.json 
"license": "ISC",
"type": "module",

REST API    http://api.controle-de-gastos.com/transactions
GET         http://api.controle-de-gastos.com/transactions
GET         http://api.controle-de-gastos.com/transactions/:id
POST        http://api.controle-de-gastos.com/transactions
PUT         http://api.controle-de-gastos.com/transactions/:id
DELETE      http://api.controle-de-gastos.com/transactions/:id

executar a aplicação: node index.js
instalar plugin vccode para chamadas http
thunder client
get     http://localhost:3000/transactions



///////////////////////////////////////////////////////////
conectar banco de dados firestone com nodejs e express

no site https://console.firebase.google.com/
visão geral => configurações => contas de serviços
clicar em GERAR NOVA CHAVE PRIVADA
arquivo será gerado e deve ser salvo na pasta do projeto: serviceAccountKey.json
instalar o pacote firebase admin: npm i firebase-admin
importar o pacote instalado no arquivo index.js
copiar as informações do firebase console no arquivo index.js
criar a chamada para listar os itens que constam no firebase



///////////////////////////////////////////////////////////
identificar o usuário com firebase e JWT
home.js da aplicação
pegar o idToken do usuario 
firebase.auth().onAuthStateChanged(user => {
    if (user) {
        ===== user.getIdToken().then(token => console.log(token)); ====
        findTransactions(user);
    }
})

pegar o token e analisar a estrutura no site abaixo
https://jwt.io/

incluir o cabeçalho da requisição JWT no index.js
incluir a verificação se o JWT é válido no index.js
incluir o filtro por usuario na requisição das transações no index.js



